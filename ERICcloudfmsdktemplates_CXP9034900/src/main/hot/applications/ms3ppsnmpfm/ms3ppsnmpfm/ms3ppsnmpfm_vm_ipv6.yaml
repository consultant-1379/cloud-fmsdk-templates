parameters:
  enm_rhel6_base_image_name:
    type: string

  flavor_4vC8M:
    type: string

  use_config_drive:
    type: boolean

  key_name:
    type: string

  user_data:
    type: string

  enm_internal_network_name:
    type: string

  enm_security_group_name:
    type: string

#This is optional, remove if not need
  provider_routed_network_name:
    type: string
    default: ''

#This is optional, remove if not need
  enm_external_network_name:
    type: string
    default: ''

  NodeIndex:
    type: string

  deployment_id:
    type: string

  service_name:
    type: string

  ms3ppsnmpfm_internal_ip_list:
    type: comma_delimited_list

  ms3ppsnmpfm_internal_ipv6_list:
    type: comma_delimited_list

  ms3ppsnmpfm_external_ipv6_list:
    type: comma_delimited_list

resources:
  interface1:
    type:  ../../../infrastructure_resources/port_ipv6.yaml
    properties:
      network_name: { get_param: enm_internal_network_name }
      enm_security_groups: { get_param: enm_security_group_name }
      fixed_ip_address: {get_param: [ ms3ppsnmpfm_internal_ip_list, {get_param: NodeIndex} ] }
      fixed_ipv6_address: {get_param: [ ms3ppsnmpfm_internal_ipv6_list, {get_param: NodeIndex} ] }

  interface2:
    type:  ../../../infrastructure_resources/external_port_ipv6_only.yaml
    properties:
      provider_routed_network_name: { get_param: provider_routed_network_name }
      enm_external_network_name: { get_param: enm_external_network_name }
      enm_security_groups: { get_param: enm_security_group_name }
      fixed_ipv6_address: {get_param: [ ms3ppsnmpfm_external_ipv6_list, {get_param: NodeIndex} ] }
  
  vm:
    type: OS::Nova::Server
    properties:
      name: { list_join: ['-', [ {get_param: deployment_id },{get_param: service_name },{ get_param: NodeIndex }]]}
      image: { get_param: enm_rhel6_base_image_name }
      flavor: { get_param: flavor_4vC8M }
      config_drive: { get_param: use_config_drive }
      key_name: { get_param: key_name }
      networks:
      - port: { get_attr: [ interface1, resource.port ] }
      - port: { get_attr: [ interface2, resource.port ] }
      user_data_format: RAW
      user_data: { get_param: user_data }
